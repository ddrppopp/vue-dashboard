(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{179:function(e,n,t){"use strict";var a=t(197),l=t.n(a),i=t(17),o=t.n(i);const s=l.a.create({baseURL:"http://localhost:3000"});s.interceptors.request.use(e=>(e.headers["ds-token"]=o.a["ds-token"],e)),n.a=s},181:function(e,n,t){var a=t(53),l=t(269);"string"==typeof(l=l.__esModule?l.default:l)&&(l=[[e.i,l,""]]);var i={insert:"head",singleton:!1},o=(a(l,i),l.locals?l.locals:{});e.exports=o},268:function(e,n,t){"use strict";var a=t(181);t.n(a).a},269:function(e,n,t){(n=t(54)(!1)).push([e.i,"\n.chart-nav {\n    display: flex;\n    justify-content: space-between;\n    padding-top: 1px;\n}\n.app-container {\n    display: flex;\n}\n#data-panel {\n    width: 30%;\n}\n#chart-panel {\n    width: 70%;\n}\n.draggable-wrapper {\n    min-height: 30px;\n    border-bottom: 1px solid #dad7d7;\n}\n",""]),e.exports=n},356:function(e,n,t){"use strict";t.r(n);var a=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[t("div",{staticClass:"chart-nav"},[t("span",[t("span",{on:{back:e.goBack}},[t("i",{staticClass:"el-icon-back"}),e._v("返回\n            ")]),e._v(" "),t("span",[e._v("创建图表")]),e._v(" "),t("el-button",{attrs:{type:"text"},on:{click:e.showAllChart}},[e._v("全部图表")])],1),e._v(" "),t("span",[t("el-button",{attrs:{type:"primary"}},[e._v("保存")]),e._v(" "),t("el-button",{attrs:{type:"primary"}},[t("i",{staticClass:"el-icon-download"})])],1)]),e._v(" "),t("div",{staticClass:"app-container"},[t("el-card",{attrs:{id:"data-panel"}},[t("data-panel",{ref:"dataPanel",attrs:{dimensions:e.dimensionList},on:{change:e.handleDataSrcChange}})],1),e._v(" "),t("el-card",{attrs:{id:"chart-panel"}},[t("el-form",[t("el-form-item",{attrs:{label:"维度"}},[t("draggable",{staticClass:"draggable-wrapper",attrs:{group:{name:"col",put:!0,pull:!0}},model:{value:e.dimensionList,callback:function(n){e.dimensionList=n},expression:"dimensionList"}},e._l(e.dimensionList,(function(n){return t("el-tag",{key:n.Column,attrs:{closable:""},on:{close:function(t){return e.handleCloseDimension(n.Id)}}},[e._v(e._s(n.Column))])})),1)],1),e._v(" "),t("el-form-item",{attrs:{label:"数值"}},[t("draggable",{staticClass:"draggable-wrapper",attrs:{group:{name:"col",put:!0,pull:!0}},model:{value:e.calculutionList,callback:function(n){e.calculutionList=n},expression:"calculutionList"}},e._l(e.calculutionList,(function(n){return t("el-tag",{key:n.Column,attrs:{closable:""},on:{close:function(t){return e.handleCloseField(n.Id)}}},[e._v(e._s(n.Column))])})),1)],1)],1)],1)],1)])};a._withStripped=!0;var l=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[t("el-form",{attrs:{"label-position":"top"}},[t("el-form-item",{attrs:{label:"数据源"}},[t("el-select",{on:{change:e.dataSrcChange},model:{value:e.selected,callback:function(n){e.selected=n},expression:"selected"}},e._l(e.dataSourceList,(function(e,n){return t("el-option",{key:n,attrs:{value:e.value,label:e.label}})})),1)],1),e._v(" "),t("el-form-item",{attrs:{label:"字段"}},[t("draggable",{attrs:{move:e.handleMove,group:{name:"col",put:!1,pull:"clone"}},model:{value:e.schemes,callback:function(n){e.schemes=n},expression:"schemes"}},[t("transition-group",e._l(e.schemes,(function(n){return t("div",{key:n.Column},[e._v(e._s(n.Column))])})),0)],1)],1)],1)],1)};l._withStripped=!0;var i=[{value:"complexity",label:"complexity"}],o=t(179);function s(e){return Object(o.a)({url:`/exesql?sql=${e}`})}var c=t(206),u=t.n(c),r={name:"data-panel",components:{draggable:u.a},data:()=>({selected:"",dataSourceList:[],schemes:[]}),props:{dimensions:{type:Array}},methods:{initDataPanel(e){this.selected=e},handleMove(e,n){return console.log(e.draggedContext.element),!this.dimensions.find(n=>e.draggedContext.element===n)},dataSrcChange(){this.$emit("change",this.selected),this.fetchSchem()},fetchSchem(){this.selected?s(`desc ${this.selected}`).then(e=>{let n=e.data.data;console.log(n),this.schemes=n.map((e,n)=>({Id:n,Type:e.Type,Column:e.Field}))}):this.schemes=[]}},created(){this.dataSourceList=i},updated(){console.log(this.list)}},d=t(52),m=Object(d.a)(r,l,[],!1,null,null,null);m.options.__file="src/views/ChartPanel/components/dataPanel.vue";var p=m.exports;const h=[{name:"tinyint",needQuotation:!1,availableFunc:["sum","avg","max","min","count","none"]},{name:"smallint",needQuotation:!1,availableFunc:["sum","avg","max","min","count","none"]},{name:"mediumint",needQuotation:!1,availableFunc:["sum","avg","max","min","count","none"]},{name:"int",needQuotation:!1,availableFunc:["sum","avg","max","min","count","none"]},{name:"bigint",needQuotation:!1,availableFunc:["sum","avg","max","min","count","none"]},{name:"float",needQuotation:!1,availableFunc:["sum","avg","max","min","count","none"]},{name:"double",needQuotation:!1,availableFunc:["sum","avg","max","min","count","none"]},{name:"real",needQuotation:!1,availableFunc:["sum","avg","max","min","count","none"]},{name:"decimal",needQuotation:!1,availableFunc:["sum","avg","max","min","count","none"]},{name:"timestamp",needQuotation:!1,availableFunc:["count","none"]},{name:"date",needQuotation:!0,availableFunc:["count","none"]},{name:"time",needQuotation:!0,availableFunc:["count","none"]},{name:"datetime",needQuotation:!0,availableFunc:["count","none"]},{name:"year",needQuotation:!0,availableFunc:["count","none"]},{name:"char",needQuotation:!0,availableFunc:["count","none"]},{name:"varchar",needQuotation:!0,availableFunc:["count","none"]},{name:"tinytext",needQuotation:!0,availableFunc:["count","none"]},{name:"text",needQuotation:!0,availableFunc:["count","none"]},{name:"mediumtext",needQuotation:!0,availableFunc:["count","none"]},{name:"longtext",needQuotation:!0,availableFunc:["count","none"]},{name:"integer",needQuotation:!1,availableFunc:["sum","avg","max","min","count","none"]}];function v(e){let n;return n=e.indexOf("(")>=0?h.find(n=>n.name===e.split("(")[0]):h.find(n=>n.name===e),n}var g={data:()=>({dimensionList:[],calculutionList:[],filterStr:void 0,limit:200,orderByStrs:[],dataSrc:void 0}),components:{dataPanel:p,draggable:u.a},methods:{goBack(){this.$router.go(-1)},showAllChart(){},handleCloseDimension(e){this.dimensionList.splice(e,1)},handleCloseField(e){this.fieldList.splice(e,1)},handleDataSrcChange(e){this.dataSrc=e}},computed:{sqlSentence(){return function({dataSrc:e,selectedCalcul:n,selectedDimension:t,orderByStrs:a,filterStr:l,limit:i}){let o=[];const s=[];let c,u,r,d=[];if(d=d.concat(n).concat(t),o=d.map(e=>{const t=n.find(n=>n.Column===e.Column);return t&&"none"!==t.calculFunc?`${t.calculFunc||v(t.Type).availableFunc[0]}(${t.Column}) as ${t.Column}`:(s.push(e.Column),e.Column)}),0!==o.length&&e)return s.length>0&&(c=`GROUP BY ${s.join()}`),a.length>0&&(u=`ORDER BY ${a.join()}`),l&&(r=`where ${l}`),`SELECT ${o.join()} FROM ${e} ${r||""} ${c||""} ${u||""} LIMIT ${i||200}`}({dataSrc:this.dataSrc,selectedDimension:this.dimensionList,selectedCalcul:this.calculutionList,filterStr:this.filterStr,limit:this.limit,orderByStrs:this.orderByStrs})}},watch:{sqlSentence:function(e){console.log(e),s(e).then(e=>{console.log(e.data.data)})},"$route.params.id":{immediate:!0,handler(){"create"===this.$route.params.id&&(this.dataSrc="a",this.$nextTick(()=>{this.$refs.dataPanel.initDataPanel(this.dataSrc)}))}}}},b=(t(268),Object(d.a)(g,a,[],!1,null,null,null));b.options.__file="src/views/ChartPanel/index.vue";n.default=b.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,